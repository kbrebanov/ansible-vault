---
# tasks file for vault

- name: Include distribution specific variables
  include_vars: "{{ ansible_distribution }}.yml"
  tags: vault

- name: Create Vault group
  group: name={{ vault_group }} system=yes state=present
  tags: vault

- name: Create Vault user
  user: >
    name={{ vault_user }}
    shell=/bin/false
    createhome=no
    group={{ vault_group }}
    system=yes
    state=present
  tags: vault

- name: Create Vault directories
  file: >
    state=directory
    path={{ item }}
    owner=root
    group=root
    mode=0755
  with_items:
    - "{{ vault_install_dir }}"
    - "{{ vault_config_dir }}"
  tags: vault

# Check before creating log dir to prevent aggressively overwriting permissions
- name: Check for log directory
  stat: >
    path={{ vault_log_file|dirname }}
  register: logdir

- name: Create log directory if it does not exist
  file: >
    state=directory
    path={{ vault_log_file|dirname }}
    owner={{ vault_user }}
    group={{ vault_group }}
  when: not logdir.stat.exists

- name: Touch log file
  file: >
    state=touch
    path={{ vault_log_file }}
    owner={{ vault_user }}
    group={{ vault_group }}
  changed_when: false

- name: Check Vault archive stat
  stat: path={{ vault_download_dir }}/{{ vault_archive }}
  register: vault_archive_stat

- name: Download Vault
  get_url: >
    url={{ vault_url }}
    dest={{ vault_download_dir }}/{{ vault_archive }}
    sha256sum={{ vault_sha256sum }}
  when: not vault_archive_stat.stat.exists
  tags: vault

- name: Unzip Vault to installation directory
  unarchive: >
    src={{ vault_download_dir }}/{{ vault_archive }}
    dest={{ vault_install_dir }}
    copy=no
    creates={{ vault_install_dir }}/vault
  tags: vault

- name: Install libcap2-bin
  apt: name=libcap2-bin state=latest
  when: ansible_os_family == "Debian"
  tags: vault

- name: Create Vault upstart configuration
  template: >
    src={{ ansible_os_family }}-vault.conf.j2
    dest=/etc/init/vault.conf
    owner=root
    group=root
    mode=0644
  when: vault_service_mgr == "upstart"
  notify: restart vault
  tags: vault

- name: Create Vault systemd configuration
  template: >
    src=templates/vault.systemd.j2
    dest=/etc/systemd/system/vault.service
    owner=root
    group=root
    mode=0644
  when: vault_service_mgr == "systemd"
  register: write_systemd_configuration
  tags: vault
  notify:
    - reload systemd
    - restart vault

- name: Reload systemd configuration
  command: systemctl daemon-reload
  when: write_systemd_configuration|changed
  tags: vault

- name: Create Vault configuration file
  template: >
    src=vault.hcl.j2
    dest={{ vault_config_dir }}/vault.hcl
    owner=root
    group=vault
    mode=0640
  notify: restart vault
  tags: vault

- name: Give vault access to mlock syscall
  capabilities: >
    path={{ vault_install_dir }}/vault
    capability='cap_ipc_lock+ep'
    state=present

- name: Ensure Vault service is started and enabled on boot
  service: name={{ vault_service_name }} state=started enabled=yes
  tags: vault
